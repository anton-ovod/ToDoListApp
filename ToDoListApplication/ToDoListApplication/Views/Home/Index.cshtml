@using ToDoListApplication.ViewModels
@{
    ViewData["Title"] = "Home Page";
}
@model IndexViewModel

<style>
    .description{
        display: none;
    }
    .updateform{
        display: none;
    }
    .main{
        display: flex;
    }
</style>

<div class="d-flex px-2 py-4 justify-content-center align-items-center border border-2 rounded-2 border-primary flex-column" style="width: 80%">
    <form class="d-flex fs-4 m-3" method="post" asp-action="ChangeStorageType" asp-controller="Home">
        <select asp-for="StorageType">
            <option value="">Select Storage Type</option>
            <option value="Database">Database</option>
            <option value="XML">XML</option>
        </select>
        <button type="submit" class="btn btn-primary fs-4">Set Storage</button>
    </form>
    <form class="w-100 d-flex" asp-controller="Home" asp-action="InsertTask">
        <div class="d-flex flex-column container-fluid gap-3">
            <div class="container-fluid row align-items-center">
                <label class="fs-3 w-25" asp-for="@Model.Task.Title"></label>
                <input class="w-75 h-100 fs-3" asp-for="@Model.Task.Title" />
            </div>
            <span asp-validation-for="@Model.Task.Title" class="text-danger align-self-center fs-4"></span>
            <div class="container-fluid row align-items-center">
                <label class="fs-3 w-25" asp-for="@Model.Task.DueDate"></label>
                <input class="w-auto h-100 fs-4" asp-for="@Model.Task.DueDate" />

                <label class="fs-4 w-auto mx-3" asp-for="@Model.Task.TaskCategoryID"></label>
                <select asp-for="@Model.Task.TaskCategoryID" class=" w-auto form-select fs-4">
                    <option value="" selected>Choose Category</option>
                    @foreach (var category in @Model.Categories)
                    {
                        <option value="@category.TaskCategoryID">@category.TaskCategoryName</option>
                    }
                </select>
            </div>
            <div class="container-fluid row align-items-center">
                <label class="fs-3 w-25 align-self-start" asp-for="@Model.Task.Description"></label>
                <textarea class="w-75 fs-4 " rows="5" asp-for="@Model.Task.Description"></textarea>
            </div>
            <input type="hidden" asp-for="@Model.Categories" value="@Model.Categories"/>
            <input type="hidden" asp-for="@Model.Tasks" value="@Model.Tasks" />
            <input type="hidden" asp-for="@Model.Statuses" value="@Model.Statuses" />
            <input type="hidden" asp-for="@Model.StorageType" value="@Model.StorageType" />
            <div class="container-fluid row align-items justify-content-center center">
                <input type="submit" class="btn btn-primary w-25 fs-4" value="Add task" />
            </div>
        </div>
    </form>
</div>

<div class="d-flex flex-column gap-4 px-4 py-4 justify-content-center align-items-center border border-2 rounded-2 border-primary" style="width: 80%;">
    <p class="fs-2 align-self-start m-0">Current Tasks: </p>
    @if (Model.Tasks.Where(task => task.TaskStatusID != 2).Any())
    {
        <div class="container-fluid pe-0 align-items-center row fw-bold">
            <div class="fs-4 m-0 col text-center">Title: </div>
            <div class="fs-4 m-0 col text-center">Category: </div>
            <div class="fs-4 m-0 col text-center">DueDate: </div>
            <div class="fs-4 m-0 col text-center"></div>
            <div class="fs-4 m-0 col text-center"></div>
        </div>
    }

    @foreach(var task in Model.Tasks.Where(task => task.TaskStatusID != 2) )
    {
        <div id="id-@task.TaskID" class="container-fluid d-flex px-0 border border-1 rounded-2 border-secondary" style="height: auto; min-height: 80px;">
            <div class="container-fluid row px-0 mx-0 align-items-center main">
                <div class="fs-4 m-0 col text-center" style="cursor: pointer" onclick="toggleDescription(this)">
                    @task.Title 
                </div>
                <div class="fs-4 col text-center">
                    @Model.Categories.Where(category => category.TaskCategoryID == task.TaskCategoryID).Select(category => category.TaskCategoryName).FirstOrDefault()
                </div>
                <div class="fs-4 col d-flex flex-row gap-1 justify-content-center align-items-center">
                    @if(task.DueDate is not null)
                    {
                        <div class="d-flex align-items-center justify-content-center">
                            <img src="./date.svg" width="35" />
                        </div>
                        <div class="text-center">
                            @task.DueDate.Value.ToShortDateString()
                            <br />
                        @if (@task.DueDate.Value.TimeOfDay != TimeSpan.Zero)
                        {
                            @task.DueDate.Value.ToString("HH:mm")
                        }
                        </div>
                            
                    }
                </div>

                <div class="col text-center">
                    <div class="btn border-0 fs-4" onclick="toggleUpdateForm(@task.TaskID)">
                        <img src="./pencil.svg" width="25" />
                    </div>
                    <a class="btn border-0 fs-4" href="@Url.Action("DeleteTask", "Home", task)">
                        <img src="./delete.svg" width="25" />
                    </a>
                </div>

                <div class="col align-self-stretch px-0 text-center d-flex justify-content-center align-items-center">
                    <a class="btn btn-primary fs-4 w-100 h-100 rounded-0 d-flex align-items-center justify-content-center" href="@Url.Action("ChangeStatus", "Home", task)">
                    @Model.Statuses.Where(status => status.TaskStatusID == task.TaskStatusID).Select(status => status.TaskStatusName).First()
                    </a>
                </div>

                @if (task.Description is not null)
                {
                    <div class="container row border-primary border-top border-3 mx-0 description my-2">
                        <span class="fs-3 fw-bold ">Description: </span>
                        <p class="fs-4" style="text-align: justify">@task.Description</p>
                    </div>
                }
            </div>

            <div class="updateform container-fluid row mx-0 align-items-center py-3">
                <form asp-controller="Home" asp-action="UpdateTask" class="container-fluid d-flex flex-column gap-2 align-self-stretch">
                    <div class="container-fluid d-flex flex-row gap-3 align-items-center align-self-stretch px-0">
                        <input asp-for="@task.Title" value="@task.Title" class="col m-0 fs-4" />
                    
                        <select asp-for="@task.TaskCategoryID" class="col form-select fs-4 m-0">
                            <option value="" selected>Choose Category</option>
                            @foreach (var category in Model.Categories)
                            {
                                @if(@category.TaskCategoryID == task.TaskCategoryID)
                                {
                                    <option value="@category.TaskCategoryID" selected>@category.TaskCategoryName</option>
                                }
                                else
                                {
                                    <option value="@category.TaskCategoryID">@category.TaskCategoryName</option>
                                }
                            }
                        </select>
                        @if(task.DueDate is not null){
                            <input class="col fs-4 h-auto w-auto m-0" asp-for="@task.DueDate" value=@task.DueDate.Value.ToString("yyyy-mm-ddTHH:mm")/>
                        }
                        else
                        {
                            <input class="col fs-4 h-auto w-auto m-0" asp-for="@task.DueDate" />

                        }
                        <input type="submit" class="btn btn-primary text-center fs-5 m-0 col h-100" value="Apply Changes"/>
                        <input type="hidden" asp-for="@task.TaskID" value="@task.TaskID" />
                    </div>
                    <div class="container-fluid d-flex flex-column gap-3 align-items-center align-self-stretch px-0">
                        <span asp-validation-for="@task.Title"></span>
                        <textarea asp-for="@task.Description" class="fs-4 w-100" rows="5" value="@task.Description"></textarea>
                    </div>
                </form>


            </div>
        </div>
    }
</div>


<div class="d-flex flex-column gap-4 px-4 py-4 justify-content-center align-items-center border border-2 rounded-2 border-primary" style="width:80%">
    <p class="fs-2 align-self-start m-0">Completed Tasks: </p>

    @foreach (var task in Model.Tasks.Where(task => task.TaskStatusID == 2))
    {
        <div class="container-fluid pe-0 align-items-center row border border-1 rounded-2 border-secondary" style="height: auto; min-height: 80px;" >
            <div class="fs-4 m-0 col text-center" style="cursor: pointer" onclick="toggleDescription(this)">
                @task.Title
            </div>
            <div class="fs-4 col text-center">
                @Model.Categories.Where(category => category.TaskCategoryID == task.TaskCategoryID).Select(category => category.TaskCategoryName).FirstOrDefault()
            </div>
            <div class="fs-4 col d-flex flex-row gap-1 justify-content-center align-items-center">
                @if (task.DueDate is not null)
                {
                    <div class="d-flex align-items-center justify-content-center">
                        <img src="./date.svg" width="35" />
                    </div>
                    <div class="text-center">
                        @task.DueDate.Value.ToShortDateString()
                        <br />
                        @if (@task.DueDate.Value.TimeOfDay != TimeSpan.Zero)
                        {
                            @task.DueDate.Value.ToString("HH:mm")
                        }
                    </div>

                }
            </div>
            <div class="col text-center">
                <a class="btn border-0 fs-4" href="@Url.Action("DeleteTask", "Home", task)">
                    <img src="./delete.svg" width="25" />
                </a>
            </div>
            <div class="col d-flex align-items-center justify-content-center fs-4 align-self-stretch px-0 text-center bg-success" style="color: white">
                @Model.Statuses.Where(status => status.TaskStatusID == task.TaskStatusID).Select(status => status.TaskStatusName).First()
            </div>

            @if (task.Description is not null)
            {
                <div class="container row border-success border-top border-2 description my-2">
                    <span class="fs-3 fw-bold ">Description: </span>
                    <p class="fs-4" style="text-align: justify">@task.Description</p>
                </div>
            }

        </div>
    }
</div>

<script>
    function toggleDescription(element)
    {
        var description = element.parentElement.querySelector('.description');
        if (description.style.display === 'none' || !description.style.display) {
            description.style.display = 'block';
        } else {
            description.style.display = 'none';
        }
    }

function toggleUpdateForm(taskID) {
    console.log("Toggling update form for task ID:", taskID);

        var updateform = document.querySelector("#id-" + taskID + " .updateform");
        var main = document.querySelector("#id-" + taskID + " .main");

    console.log("Update Form:", updateform);
    console.log("Main Section:", main);

    if (updateform && main) {
        if (updateform.style.display === 'none' || updateform.style.display === '') {
            updateform.style.display = 'flex';
            main.style.display = 'none';
        } else {
            main.style.display = 'flex';
            updateform.style.display = 'none';
        }
    } else {
        console.error("Update form or main section not found.");
    }
}
</script>
