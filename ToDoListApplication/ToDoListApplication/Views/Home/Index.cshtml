@using ToDoListApplication.ViewModels
@{
    ViewData["Title"] = "Home Page";
}
@model IndexViewModel

<style>
    .description{
        display: none;
    }
</style>

<div class="d-flex px-2 py-4 justify-content-center border border-2 rounded-2 border-primary" style="width: 80%">
    <form class="w-100 d-flex" asp-controller="Home" asp-action="InsertTask">
        <div class="d-flex flex-column container-fluid gap-3">
            <div class="container-fluid row align-items-center">
                <label class="fs-3 w-25" asp-for="Title"></label>
                <input class="w-75 h-100 fs-3" asp-for="Title" />
            </div>
            <span asp-validation-for="Title" class="text-danger align-self-center fs-4"></span>
            <div class="container-fluid row align-items-center">
                <label class="fs-3 w-25" asp-for="DueDate"></label>
                <input class="w-auto h-100 fs-4" asp-for="DueDate" />

                <label class="fs-4 w-auto mx-3" asp-for="TaskCategoryID"></label>
                <select asp-for="TaskCategoryID" class=" w-auto form-select fs-4">
                    <option value="" selected>Choose Category</option>
                    @foreach (var category in Model.Categories)
                    {
                        <option value="@category.TaskCategoryID">@category.TaskCategoryName</option>
                    }
                </select>
            </div>
            <div class="container-fluid row align-items-center">
                <label class="fs-3 w-25 align-self-start" asp-for="Description"></label>
                <textarea class="w-75 fs-4 " rows="5" asp-for="Description"></textarea>
            </div>
            <div class="container-fluid row align-items justify-content-center center">
                <input type="submit" class="btn btn-primary w-25 fs-4" value="Add task" />
            </div>
        </div>
    </form>
</div>

<div class="d-flex flex-column gap-4 px-4 py-4 justify-content-center align-items-center border border-2 rounded-2 border-primary" style="width: 80%;">
    <p class="fs-2 align-self-start m-0">Current Tasks: </p>
    @if (Model.Tasks.Where(task => task.TaskStatusID != 2).Any())
    {
        <div class="container-fluid pe-0 align-items-center row fw-bold">
            <div class="fs-4 m-0 col text-center">Title: </div>
            <div class="fs-4 m-0 col text-center">Category: </div>
            <div class="fs-4 m-0 col text-center">DueDate: </div>
            <div class="fs-4 m-0 col text-center"></div>
            <div class="fs-4 m-0 col text-center"></div>
        </div>
    }

    @foreach(var task in Model.Tasks.Where(task => task.TaskStatusID != 2) )
    {
        <div class="container-fluid pe-0 align-items-center row border border-1 rounded-2 border-secondary" style="height: auto; min-height: 80px;">
                <div class="fs-4 m-0 col text-center" style="cursor: pointer" onclick="toggleDescription(this)">
                    @task.Title 
                </div>
                <div class="fs-4 col text-center">
                    @Model.Categories.Where(category => category.TaskCategoryID == task.TaskCategoryID).Select(category => category.TaskCategoryName).FirstOrDefault()
                </div>
                <div class="fs-4 col d-flex flex-row gap-1 justify-content-center align-items-center">
                    @if(task.DueDate is not null)
                    {
                        <div class="d-flex align-items-center justify-content-center">
                            <img src="./date.svg" width="35px" />
                        </div>
                        <div class="text-center">
                            @task.DueDate.Value.ToShortDateString()
                            <br />
                        @if (@task.DueDate.Value.TimeOfDay != TimeSpan.Zero)
                        {
                            @task.DueDate.Value.ToString("HH:mm")
                        }
                        </div>
                            
                    }
                </div>

                <div class="col text-center">
                    <a class="btn border-0 fs-4" href="@Url.Action("UpdateTask", "Home", task)">
                        <img src="./pencil.svg" width="25px" />
                    </a>
                    <a class="btn border-0 fs-4" href="@Url.Action("DeleteTask", "Home", task)">
                        <img src="./delete.svg" width="25px" />
                    </a>
                </div>

                <div class="col align-self-stretch px-0 text-center d-flex justify-content-center align-items-center">
                    <a class="btn btn-primary fs-4 w-100 h-100 rounded-0 d-flex align-items-center justify-content-center" href="@Url.Action("ChangeStatus", "Home", task)">
                    @Model.Statuses.Where(status => status.TaskStatusID == task.TaskStatusID).Select(status => status.TaskStatusName).First()
                    </a>
                </div>

                @if (task.Description is not null)
                {
                    <div class="container row border-primary border-top border-2 description my-2">
                        <span class="fs-3 fw-bold ">Description: </span>
                        <p class="fs-4" style="text-align: justify">@task.Description</p>
                    </div>
                }
        </div>
    }
</div>


<div class="d-flex flex-column gap-4 px-4 py-4 justify-content-center align-items-center border border-2 rounded-2 border-primary" style="width:80%">
    <p class="fs-2 align-self-start m-0">Completed Tasks: </p>

    @foreach (var task in Model.Tasks.Where(task => task.TaskStatusID == 2))
    {
        <div class="container-fluid pe-0 align-items-center row border border-1 rounded-2 border-secondary" style="height: auto; min-height: 80px;" >
            <div class="fs-4 m-0 col text-center" style="cursor: pointer" onclick="toggleDescription(this)">
                @task.Title
            </div>
            <div class="fs-4 col text-center">
                @Model.Categories.Where(category => category.TaskCategoryID == task.TaskCategoryID).Select(category => category.TaskCategoryName).FirstOrDefault()
            </div>
            <div class="fs-4 col d-flex flex-row gap-1 justify-content-center align-items-center">
                @if (task.DueDate is not null)
                {
                    <div class="d-flex align-items-center justify-content-center">
                        <img src="./date.svg" width="35px" />
                    </div>
                    <div class="text-center">
                        @task.DueDate.Value.ToShortDateString()
                        <br />
                        @if (@task.DueDate.Value.TimeOfDay != TimeSpan.Zero)
                        {
                            @task.DueDate.Value.ToString("HH:mm")
                        }
                    </div>

                }
            </div>
            <div class="col text-center">
                <a class="btn border-0 fs-4" href="@Url.Action("DeleteTask", "Home", task)">
                    <img src="./delete.svg" width="25px" />
                </a>
            </div>
            <div class="col d-flex align-items-center justify-content-center fs-4 align-self-stretch px-0 text-center bg-success" style="color: white">
                @Model.Statuses.Where(status => status.TaskStatusID == task.TaskStatusID).Select(status => status.TaskStatusName).First()
            </div>

            @if (task.Description is not null)
            {
                <div class="container row border-success border-top border-2 description my-2">
                    <span class="fs-3 fw-bold ">Description: </span>
                    <p class="fs-4" style="text-align: justify">@task.Description</p>
                </div>
            }

        </div>
    }
</div>

<script>
    function toggleDescription(element)
    {
        var description = element.parentElement.querySelector('.description');
        if (description.style.display === 'none' || !description.style.display) {
            description.style.display = 'block';
        } else {
            description.style.display = 'none';
        }
    }
</script>
